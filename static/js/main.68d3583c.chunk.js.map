{"version":3,"sources":["features/userSlice.js","HeaderOption.js","firebase.js","Header.js","Sidebar.js","InputOption.js","Post.js","Feed.js","Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","src","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","photoUrl","displayName","InputOption","color","style","Post","description","message","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","catch","error","alert","createUserWithEmailAndPassword","updateProfile","photoURL","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68d3583c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n     \r\n      state.user = action.payload;\r\n    },\r\n    \r\n    logout: (state) => {\r\n      state.user= null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React from 'react';\r\nimport \"./HeaderOption.css\";\r\nimport {Avatar} from \"@material-ui/core\"\r\nimport { selectUser } from './features/userSlice';\r\nimport { useSelector } from 'react-redux';\r\nfunction HeaderOption({ avatar,Icon,title,onClick})\r\n{\r\n    const user=useSelector(selectUser);\r\n    return(\r\n        <div  onClick={onClick} className='headerOption'>\r\n           {Icon && <Icon className=\"headerOption_icon\" />}\r\n           { avatar && (\r\n               <Avatar className=\"headerOption_icon\">\r\n                   {user?.email[0]}\r\n               </Avatar>\r\n\r\n           )}\r\n           <h3 className=\"headerOption_title\">{title}</h3>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default HeaderOption;","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from 'firebase'\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyB0IqkHA_ohVxeB0TSUM577xlxkXLkys94\",\r\n    authDomain: \"linkedin-clone-ef4d7.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-ef4d7\",\r\n    storageBucket: \"linkedin-clone-ef4d7.appspot.com\",\r\n    messagingSenderId: \"325094703819\",\r\n    appId: \"1:325094703819:web:b877371e17286f1a14914e\",\r\n    measurementId: \"G-WSDQTT4374\"\r\n  };\r\n\r\n  const firebaseApp= firebase.initializeApp(firebaseConfig)\r\n  const db= firebaseApp.firestore();\r\n  const auth=firebase.auth();\r\n\r\n  export {db,auth};","import React from 'react';\r\nimport './Header.css'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport HeaderOption from './HeaderOption'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport { logout } from \"./features/userSlice\";\r\n\r\nfunction Header()\r\n{ \r\n   \r\n    const dispatch =useDispatch();\r\n\r\n    const logoutOfApp= ()=>{\r\n        dispatch(logout())\r\n        auth.signOut();\r\n\r\n    };\r\n    return (\r\n        <div className='header'>\r\n        {/* <h1 >hey this is me</h1> */}\r\n        <div className=\"header_left\">\r\n        <img src=\"https://i.imgur.com/Vahbdkj.png?1\" alt=\"\"/>\r\n        <div className=\"header_search\">\r\n        <SearchIcon />\r\n            <input placeholder=\"Search\" type=\"text\"/>\r\n        </div>\r\n\r\n        </div>\r\n        <div className=\"header_right\">\r\n            <HeaderOption Icon={HomeIcon} title='Home'/>\r\n            <HeaderOption Icon={SupervisorAccountIcon}  title=\"My Network\"/>\r\n            <HeaderOption Icon={BusinessCenterIcon}  title=\"Jobs\"/>\r\n            <HeaderOption Icon={ChatIcon}  title=\"Chat\"/>\r\n            <HeaderOption Icon={NotificationsIcon}  title=\"Notifications\"/>\r\n            <HeaderOption avatar={true}  title=\"me\"\r\n                onClick={logoutOfApp}\r\n            />\r\n             \r\n\r\n        </div>\r\n        </div>\r\n);\r\n}\r\n\r\nexport default Header;","import { Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport \"./Sidebar.css\"\r\n\r\nfunction Sidebar()\r\n{\r\n    const user =useSelector(selectUser);\r\n    const recentItem =(topic)=>(\r\n        <div className=\"sidebar_recentItem\">\r\n            <span className=\"sidebar_hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n    return(\r\n    <div className=\"sidebar\">\r\n        <div className=\"sidebar_top\">\r\n            <img src=\"https://png.pngtree.com/thumb_back/fh260/background/20190223/ourmid/pngtree-pure-color-watercolor-graffiti-gradient-background-board-design-board-design-image_66713.jpg\" alt=\"\"/>\r\n            <Avatar src={user.photoUrl} className=\"sidebar_avatar\">\r\n                {user.email[0]}\r\n            </Avatar>\r\n            <h2> {user.displayName} </h2>\r\n            <h4>{user.email}</h4>\r\n        </div>\r\n        <div className=\"sidebar_stats\">\r\n            <div className=\"sidebar_stat\">\r\n                <p>Who viewed you</p>\r\n                <p className=\"sidebar_statnumber\">999</p>\r\n            </div>\r\n            <div className=\"sidebar_stat\">\r\n            <p>Views on post</p>\r\n                <p className=\"sidebar_statnumber\">9,888</p>\r\n\r\n            </div>\r\n        </div>\r\n        <div className=\"sidebar_bottom\">\r\n            <p>Recent</p>\r\n            {recentItem(\"reactjs\")}\r\n            {recentItem(\"programmin\")}\r\n            {recentItem(\"software_dev\")}\r\n            {recentItem(\"design\")}\r\n            {recentItem(\"developed\")}\r\n        </div>\r\n\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport \"./InputOption.css\"\r\n\r\n\r\nfunction InputOption({Icon, title, color})\r\n{\r\n\r\n    return(\r\n        <div className=\"inputOption\">\r\n        <Icon style={{color:color}} />\r\n        <h4>{title}</h4> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputOption;","import {Avatar}  from '@material-ui/core'\r\n\r\nimport  ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined'\r\nimport  ChatOutlinedIcon from '@material-ui/icons/ChatOutlined'\r\nimport  SendOutlinedIcon from '@material-ui/icons/SendOutlined'\r\nimport  ShareOutlinedIcon from '@material-ui/icons/ShareOutlined'\r\nimport React from 'react'\r\nimport InputOption from './InputOption'\r\nimport \"./Post.css\"\r\n\r\nfunction Post({ name, description,message,photoUrl})\r\n{\r\n    return(\r\n        <div className='post'>\r\n        <div className=\"post_header\">\r\n            <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n            <div className=\"post_info\">\r\n                 <h2>{name}</h2>\r\n                <p>{description}</p>\r\n            </div>\r\n        </div>\r\n        <div className=\"post_body\">\r\n            <p>{message}</p>\r\n        </div>\r\n        <div className=\"post_buttons\">\r\n            <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\r\n            <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\r\n            <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\r\n            <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\r\n        </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport './Feed.css';\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport InputOption from './InputOption'\r\nimport  SubscriptionsIcon from '@material-ui/icons/Subscriptions';\r\nimport  EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport  CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from './Post';\r\nimport { db } from './firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nfunction Feed()\r\n{   \r\n    const user=useSelector(selectUser);\r\n    const[input,setInput]=useState('');\r\n    const[posts, setPosts]=useState([]);\r\n    useEffect(()=>{\r\n       db.collection(\"posts\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>(\r\n           setPosts(snapshot.docs.map(doc =>(\r\n               {\r\n                   id:doc.id,\r\n                   data: doc.data()\r\n               }\r\n           )))\r\n       ))\r\n    },[])\r\n    const sendPost=(e)=>{\r\n        e.preventDefault();\r\n       db.collection('posts').add({\r\n           name:user.displayName,\r\n           description:user.email,\r\n           message:input,\r\n           photoUrl:user.photoUrl ||\"\",\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n\r\n\r\n       })\r\n       setInput(\"\");\r\n\r\n    };\r\n\r\n    return(\r\n        <div className='feed'>\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed_input\">\r\n                    <CreateIcon/>\r\n                    <form>\r\n                        <input value={input} onChange={e=>setInput(e.target.value)} type=\"text\"></input>\r\n                        <button onClick={sendPost}  type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed_inputOptions\">\r\n                   <InputOption Icon={ImageIcon}  title=\"Photo\"\r\n                       color=\"#70B5F9\"/>\r\n                       <InputOption Icon={SubscriptionsIcon}  title=\"Vedio\"\r\n                       color=\"#E7A33E\"/>\r\n                       <InputOption Icon={EventNoteIcon}  title=\"Event\"\r\n                       color=\"#0C0CBCD\"/>\r\n                       <InputOption Icon={CalendarViewDayIcon}  title=\"Write article\"\r\n                       color=\"#7FC15E\"/>\r\n                </div>\r\n            </div>\r\n            {/* posts */}\r\n            {posts.map(({id , data : {name, description, message,photoUrl}})=>(\r\n              <Post\r\n                   key={id}\r\n             name={name}\r\n             description={description} \r\n             message= {message}\r\n             photoUrl={photoUrl}\r\n              />\r\n            ))}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Feed;","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from './firebase';\r\nimport{login } from './features/userSlice';\r\nimport './Login.css'\r\n\r\nfunction Login()\r\n{\r\n    const [email, setEmail]=useState(\"\");\r\n    const [password, setPassword]=useState(\"\");\r\n    const [name, setName]=useState(\"\");\r\n    const [profilePic, setProfilePic]=useState(\"\");\r\n    const dispatch =useDispatch();\r\n    const LoginToApp=(e)=>{\r\n        auth.preventDefault();\r\n\r\n\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then(userAuth =>{\r\n            dispatch(login({\r\n                email:userAuth.user.email,\r\n                uid:userAuth.user.uid,\r\n                displayName:name,\r\n                profileUrl:profilePic,\r\n\r\n            }))\r\n        }).catch(error=> alert(error));\r\n    };\r\n    const register=()=>{\r\n        if(!name){\r\n            return alert(\"Please enter a full name!\");\r\n        }\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((userAuth)=>{\r\n            userAuth.user.updateProfile({\r\n                displayName:name,\r\n                photoURL:profilePic,\r\n            })\r\n            .then(()=>{\r\n              dispatch(\r\n                  login({\r\n                  email:userAuth.user.email,\r\n                  uid:userAuth.user.uid,\r\n                  displayName :userAuth.user.name,\r\n                  photoUrl:userAuth.user.profilePic,\r\n\r\n              }))\r\n            })\r\n        }).catch((error) => alert(error));\r\n    };\r\n    return(\r\n        <div className=\"login\">\r\n        <img src=\"https://genylabs.io/wp-content/uploads/2019/10/Social-Listening-to-LinkedIn.png\"/>\r\n        <form>\r\n            <input value={name} onChange={(e)=> setName(e.target.value)} placeholder=\"full name (required if registered) \" type=\"text\"></input>\r\n            <input value={profilePic} onChange={(e)=> setProfilePic(e.target.value) }placeholder=\" Profile pic Url (optional) \" type=\"text\"/>\r\n            <input value={email} onChange={(e)=> setEmail(e.target.value)} placeholder=\"Email \" type=\"email\"/>\r\n            <input value={password}  onChange={(e)=> setPassword(e.target.value)}placeholder =\" Password \" type=\"password\"/>\r\n            <button type=\"submit\" onClick={LoginToApp}>Sign In</button>\r\n        </form>\r\n        <p>Not a member?{\" \"}\r\n        <span className=\"login_register\" onClick={register}>Register Now</span>\r\n        </p>\r\n        </div>\r\n    )\r\n}\r\nexport default Login;","import React, { useEffect } from 'react';\r\nimport Header from \"./Header\";\r\nimport './App.css';\r\nimport Sidebar from './Sidebar';\r\nimport Feed from './Feed';\r\nimport  {useDispatch, useSelector} from 'react-redux';\r\nimport  {login,logout, selectUser}  from './features/userSlice';\r\nimport Login from './Login'\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n  useEffect(()=>{\r\n   auth.onAuthStateChanged(userAuth=>{\r\n     if(userAuth)\r\n     {\r\n      dispatch(login({\r\n        email:userAuth.email,\r\n        uid: userAuth.uid,\r\n        displayName:userAuth.displayName,\r\n        photoUrl:userAuth.photoURL,\r\n      }));\r\n\r\n     }else{\r\n      dispatch(logout());\r\n\r\n\r\n     }\r\n   })\r\n  },[])\r\n  return (\r\n    <div className=\"app\">\r\n    {/* <h1>Lets build a LinkedIn clone</h1> */}\r\n\r\n    {/* Header */}\r\n    <Header/>\r\n\r\n    {!user ? (\r\n\r\n    <Login/>\r\n    ):(\r\n      <div className=\"app_body\">\r\n     <Sidebar/>\r\n     <Feed/>\r\n    </div>\r\n    )}\r\n    \r\n    \r\n   \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}